{"version":3,"sources":["components/solanaLogo.png","components/solanaLogoInvert.png","components/Coinflip.js","components/CreateCoinflip.js","components/Phantom/SendTransaction.tsx","components/Chat.js","components/CoinflipMenu.js","components/Dice/img/black1.png","components/Dice/img/black2.png","components/Dice/img/black3.png","components/Dice/img/black4.png","components/Dice/img/black5.png","components/Dice/DiceRoll.js","components/Dice/Dice.js","components/Dice/CreateDice.js","components/Dice/DiceMenu.js","components/casinoLogo.png","components/Home.js","components/Profile.js","components/ProfilePopup.js","components/Ranking.js","components/Phantom/ConnectToPhantom.tsx","components/adTest1.jpg","components/adTest2.jpg","App.js","index.js"],"names":["Coinflip","props","splitText","text","container","x","length","push","className","style","animationDelay","charAt","userWallet","wallet1","state","title","price","visible","onCancel","footer","onClick","width","border","borderRadius","src","coin","SolanaLogo","SolanaLogoInvert","id","result","date","Date","now","intervalDelay","precision","onComplete","coinflipFinish","renderer","data","seconds","wallet2","marginTop","transactionPercentage","onJoin","percent","status","transactionError","size","CreateCoinflip","useState","setCoin","setPrice","name","setName","onCreateFlip","wallet","class","Group","value","onChange","e","target","Button","height","textAlign","transform","defaultValue","min","step","stringMode","maxLength","getProvider","window","provider","solana","isPhantom","NETWORK","clusterApiUrl","CONNECTION","Connection","EXTERNAL_ADDRESS","PublicKey","createTransaction","instructions","a","publicKey","transaction","Transaction","add","feePayer","console","log","anyTransaction","getRecentBlockhash","recentBlockhash","blockhash","createTransferTransaction","SystemProgram","transfer","fromPubkey","toPubkey","lamports","sendTransaction","item","updateData","setTransactionPercent","setTransactionError","method","signAndSendTransaction","signature","confirmTransaction","toBase58","user2","warn","JSON","stringify","sendTransferInstruction","undefined","Chat","message","setMessage","messages","setMessages","addToMessageBoard","event","preventDefault","fetch","headers","Accept","body","walletName","substring","then","res","catch","error","React","useEffect","json","overflow","padding","display","flexDirection","dataLength","hasMore","scrollableTarget","itemLayout","dataSource","renderItem","Item","Meta","avatar","description","onSubmit","type","placeholder","CoinflipMenu","loading","setLoading","setData","createVisibile","setCreateVisibile","needsUpdate","setNeedsUpdate","transactionPercent","loadNewData","sort","b","parseFloat","i","setTimeout","handle","setInterval","clearInterval","axios","post","coinflipData","response","createCoinflip","EmptyList","useRef","emptyText","image","Empty","PRESENTED_IMAGE_SIMPLE","LoadingOutlined","fontSize","cursor","position","top","right","ReloadOutlined","marginBottom","marginRight","endMessage","plain","locale","user1","href","userData","endCoinflip","DiceRoll","DiceBlack1","DiceBlack2","DiceBlack3","DiceBlack4","DiceBlack5","elDiceOne","document","getElementById","elDiceTwo","diceOne","rolluser1","diceTwo","rolluser2","classList","remove","k","rollDice","setDice","Dice","diceFinish","onCreateDice","DiceMenu","diceData","createDice","CreateDice","endDice","Card","Home","totalCoinflips","setTotalCoinflips","totalDice","setTotalDice","totalGambled","setTotalGambled","get","count","err","gutter","span","Logo","alt","Profile","loadNewUserData","updatedUser","setUserData","ProfilePopup","Option","Select","Ranking","list","setList","userRanking","setUserRanking","profileData","setProfileData","showProfile","setShowProfile","getRanking","filter","obj","indexOf","marginLeft","picture","PhantomSVG","version","xmlns","viewBox","preserveAspectRatio","fill","stroke","d","ConnectToPhantom","phantom","setPhantom","phantomError","setPhantomError","connected","setConnected","on","setUserWallet","icon","Icon","component","disconnect","danger","connect","open","Header","Layout","Content","Footer","Sider","Title","Menu","SubMenu","Typography","App","collapsed","setCollapsed","currentPage","setCurrentPage","parsedData","localStorage","getItem","changeCurrentPage","page","setItem","bottom","float","theme","mode","defaultSelectedKeys","minHeight","collapsible","onCollapse","HomeOutlined","UserOutlined","TrophyOutlined","DollarOutlined","margin","ReactDOM","render"],"mappings":"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","file":"static/js/main.9aaee67d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/solanaLogo.0af56d5c.png\";","export default __webpack_public_path__ + \"static/media/solanaLogoInvert.797fe01a.png\";","import React from \"react\";\nimport SolanaLogo from './solanaLogo.png'\nimport SolanaLogoInvert from './solanaLogoInvert.png'\nimport Countdown from 'react-countdown';\nimport { Button, Skeleton, Col, Row, Popover, List, Avatar, Divider, Modal, Progress} from 'antd';\n\n\nconst Coinflip = (props) => {\n\n    const splitText = (text) => {\n        let container = [];\n        for (var x = 0; x < text.length; x++)\n        {\n            container.push(<div className=\"loading__letter\" style={{animationDelay: ((0.1 * (x + 1)) + 's')}}>{text.charAt(x)}</div>);\n        } \n        return container;\n    }\n\n    return (\n        <>\n            {props.userWallet == props.wallet1 && props.state == \"open\" ?\n            <>\n            <Modal\n                title={\"Coinflip \" + props.price + \" SOL\"}\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer={[\n                    <Button key=\"back\" onClick={props.onCancel}>\n                    Back\n                    </Button>,\n                ]}\n            >\n            <div className=\"coinflip-div\">\n                <div className=\"loading-container\">\n                    <div className=\"loading\">\n                        {splitText('Waiting...')}\n                    </div>\n                </div>\n                <p>Your Side:</p>\n                <img style={{width: '45px', border: 'solid 2px #DC1FFF', borderRadius: '100%'}} src={props.coin == '1' ? SolanaLogo : SolanaLogoInvert}/>\n            </div>\n            </Modal>\n            </>\n            : props.state === 'started' ? <>\n            <Modal\n                title={\"Coinflip \" + props.price + \" SOL\"}\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer={[\n                    <Button key=\"back\" onClick={props.onCancel}>\n                    Back\n                    </Button>,\n                ]}\n            >\n            <div className=\"coinflip-div\">\n                <div id=\"coin\" className={props.result}>\n                    <div className=\"side-a\">\n                        <img src={SolanaLogoInvert}/>\n                    </div>\n                    <div className=\"side-b\">\n                        <img src={SolanaLogo}/>\n                    </div>\n                </div>\n                <p className=\"countdownTimer\" id=\"countdown\"> <Countdown \n                date={Date.now() + 5000} \n                intervalDelay={1000}\n                precision={0}\n                onComplete={props.coinflipFinish}\n                renderer={data => <div>{data.seconds}</div>} \n                /> </p>\n                <p>{props.wallet1} <br/> vs <br/> {props.wallet2}</p>\n            </div>\n            </Modal>\n            </> : props.state === 'starting' ? <>\n                        <Modal\n                title={\"Coinflip \" + props.price + \" SOL\"}\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer={[\n                    <Button key=\"back\" onClick={props.onCancel}>\n                    Back\n                    </Button>,\n                ]}\n            >\n            <div className=\"coinflip-div\">\n                <div id=\"coin\" className={props.result}>\n                    <div className=\"side-a\">\n                        <img src={SolanaLogoInvert}/>\n                    </div>\n                    <div className=\"side-b\">\n                        <img src={SolanaLogo}/>\n                    </div>\n                </div>\n                 <div className=\"loading-container\" style={{marginTop: '30px'}}>\n                    <div className=\"loading\">\n                        {splitText('Starting...')}\n                    </div>\n                </div>\n                <p>{props.wallet1} <br/> vs <br/> {props.wallet2}</p>\n            </div>\n            </Modal> </> : props.state === 'open' ? <>\n            <Modal\n                title={\"Coinflip \" + props.price + ' SOL'}\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer=\n                {props.transactionPercentage != 0 ? \n                <Button key=\"close\" onClick={props.onCancel}>\n                Close\n                </Button> \n                :\n                <>\n                    <Button key=\"close\" onClick={props.onCancel}>\n                        Cancel\n                    </Button>\n                    <Button key=\"close\" onClick={props.onJoin}>\n                        Join\n                    </Button> \n                </> }\n            >\n                <div className=\"coinflip-div\">\n                    <div id=\"coin\" className={props.result}>\n                    <div className=\"side-a\">\n                        <img src={SolanaLogoInvert}/>\n                    </div>\n                    <div className=\"side-b\">\n                        <img src={SolanaLogo}/>\n                    </div>\n                </div>\n                    <p className=\"countdownTimer\"> Not Started </p>\n                    <p> Join Against {props.wallet1} <br/> for {props.price} SOL</p>\n                </div>\n                <Progress percent={props.transactionPercentage} status={props.transactionError ? 'exception' : 'none'} size=\"small\"  />\n                {props.transactionPercentage == 75 && !props.transactionError ?                 \n                <div className=\"loading-container\">\n                    <div className=\"loading\">\n                        {splitText('Confirming Transaction...')}\n                    </div>\n                </div> : props.transactionPercentage == 25 && !props.transactionError ||  props.transactionPercentage == 50 && !props.transactionError ?\n                <div className=\"loading-container\">\n                    <div className=\"loading\">\n                        {splitText('Joining...')}\n                    </div>\n                </div> : null\n                }\n            </Modal>\n            </> : <>\n            <Modal\n                title={\"Coinflip \" + props.price + ' SOL'}\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer={[\n                    <Button key=\"back\" onClick={props.onCancel}>\n                    Back\n                    </Button>,\n                ]}\n            >\n                <div className=\"coinflip-div\">\n                    <div id=\"coin\" className={props.result + '2'}>\n                    <div className=\"side-a\">\n                        <img src={SolanaLogoInvert}/>\n                    </div>\n                    <div className=\"side-b\">\n                        <img src={SolanaLogo}/>\n                    </div>\n                </div>\n                    <p className=\"countdownTimer\">Finished </p>\n                   <p>Winner: <br /> {props.result === 'heads' && props.coin === '1' ? props.wallet1 : props.result === 'tails' && props.coin === '2' ? props.wallet1 : props.wallet2}</p>\n                </div>\n                \n            </Modal>\n            </>\n            }\n        </>\n    );\n}\n\nexport default Coinflip;\n","import React, {useState} from \"react\";\nimport SolanaLogo from './solanaLogo.png'\nimport SolanaLogoInvert from './solanaLogoInvert.png'\nimport Countdown from 'react-countdown';\nimport { Button, Skeleton, Col, Row, Popover, List, Avatar, Divider, Modal, Radio, InputNumber, Input, Progress } from 'antd';\n\n\nconst CreateCoinflip = (props) => {\n    const [coin, setCoin] = useState('1');\n    const [price, setPrice] = useState(1);\n    const [name, setName] = useState('Hello World!');\n\n    const handleCoinChange = (e) => {\n        setCoin(e.target.value);\n    };\n\n    const handlePriceChange = (e) => {\n        setPrice(e);\n    };\n\n    const handleNameChange = (e) => {\n        setName(e.target.value);\n    };\n\n    const splitText = (text) => {\n        let container = [];\n        for (var x = 0; x < text.length; x++)\n        {\n            container.push(<div className=\"loading__letter\" style={{animationDelay: ((0.1 * (x + 1)) + 's')}}>{text.charAt(x)}</div>);\n        } \n        return container;\n    }   \n\n    return (\n        <>\n            <Modal \n                title=\"Coinflip Creation\"\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer=\n                    {props.transactionPercentage != 0 ? \n                    <Button key=\"close\" onClick={props.onCancel}>\n                    Close\n                    </Button> \n                    :\n                    <>\n                        <Button key=\"close\" onClick={props.onCancel}>\n                        Cancel\n                        </Button>\n                        <Button key=\"close\" onClick={() => {props.onCreateFlip(\n                            {\n                                price: price,\n                                name: name,\n                                wallet: null,\n                                coin: coin,\n                            }\n                        )}}>\n                            Create Coinflip\n                        </Button> \n                    </> }\n            >\n                <div class=\"coinflip-div\">\n                        <p>Pick your side</p>\n                        <Radio.Group value={coin} onChange={handleCoinChange}>\n                            <Radio.Button style={{height: '0px', textAlign: 'center', transform: 'rotateX(180deg)', marginTop: '50px'}} value=\"1\"><img style={{width: '50px', border: 'solid 2px #DC1FFF', borderRadius: '100%', marginTop: '5px', transform: 'rotateX(180deg)'}} src={SolanaLogo}/></Radio.Button>\n                            <Radio.Button style={{height: '0px', textAlign: 'center', transform: 'rotateX(180deg)', marginTop: '50px'}} value=\"2\"><img style={{width: '50px', border: 'solid 2px #DC1FFF', borderRadius: '100%', marginTop: '5px', transform: 'rotateX(180deg)'}} src={SolanaLogoInvert}/></Radio.Button>\n                        </Radio.Group>\n                        <p style={{marginTop: '-30px'}}>Amount to Wager:</p>\n                        <InputNumber\n                            onChange={handlePriceChange}\n                            defaultValue={price}\n                            min=\"0.05\"\n                            step=\"0.05\"\n                            stringMode\n                        />\n                        <p style={{marginTop: '10px'}}>Coinflip Name:</p>\n                        <Input\n                            maxLength={12}\n                            style={{width: '125px'}}\n                            onChange={handleNameChange}\n                            value={name}\n                        />\n                        <Progress percent={props.transactionPercentage} status={props.transactionError ? 'exception' : 'none'} size=\"small\"  />\n                        {props.transactionPercentage == 75 && !props.transactionError ?                 \n                        <div className=\"loading-container\">\n                            <div className=\"loading\">\n                                {splitText('Confirming Transaction...')}\n                            </div>\n                        </div> : props.transactionPercentage == 25 && !props.transactionError ||  props.transactionPercentage == 50 && !props.transactionError ?\n                        <div className=\"loading-container\">\n                            <div className=\"loading\">\n                                {splitText('Creating Coinflip...')}\n                            </div>\n                        </div> : null\n                        }\n                </div>\n            </Modal>\n        </>\n    );\n}\n\nexport default CreateCoinflip;\n","import { useState, useEffect } from \"react\";\nimport {\n  Connection,\n  PublicKey,\n  Transaction,\n  clusterApiUrl,\n  SystemProgram,\n  TransactionInstruction,\n  SendOptions,\n} from \"@solana/web3.js\";\nimport { Token } from \"@solana/spl-token\";\n\ntype DisplayEncoding = \"utf8\" | \"hex\";\ntype PhantomEvent = \"disconnect\" | \"connect\";\ntype PhantomRequestMethod =\n  | \"connect\"\n  | \"disconnect\"\n  | \"signTransaction\"\n  | \"signAllTransactions\"\n  | \"signAndSendTransaction\"\n  | \"signMessage\";\n\ninterface ConnectOpts {\n  onlyIfTrusted: boolean;\n}\n\ninterface PhantomProvider {\n  publicKey: PublicKey | null;\n  isConnected: boolean | null;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\n  signAndSendTransaction: (\n    transaction: Transaction,\n    options?: SendOptions\n  ) => Promise<{ signature: string }>;\n  signMessage: (\n    message: Uint8Array | string,\n    display?: DisplayEncoding\n  ) => Promise<{ signature: string; publicKey: PublicKey }>;\n  connect: (opts?: Partial<ConnectOpts>) => Promise<{ publicKey: PublicKey }>;\n  disconnect: () => Promise<void>;\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\n  request: (method: PhantomRequestMethod, params: any) => Promise<unknown>;\n}\n\nconst getProvider = (): PhantomProvider | undefined => {\n  if (\"solana\" in window) {\n    const anyWindow: any = window;\n    const provider = anyWindow.solana;\n    if (provider.isPhantom) {\n      return provider;\n    }\n  }\n};\n\nconst NETWORK = clusterApiUrl(\"devnet\");\nconst CONNECTION = new Connection(NETWORK);\nconst EXTERNAL_ADDRESS = new PublicKey(\n  \"2N8qxv4QAGiYe8m3Z2PmCo2SwQtYqKCmUEQj7WsCXuxp\"\n);\n\nvar provider = getProvider();\n\nconst createTransaction = async (instructions: TransactionInstruction[]) => {\n  if (!provider.publicKey) {\n    return;\n  }\n  let transaction = new Transaction().add(...instructions);\n  transaction.feePayer = provider.publicKey;\n  console.log(\"Getting recent blockhash\");\n  const anyTransaction: any = transaction;\n  anyTransaction.recentBlockhash = (\n    await CONNECTION.getRecentBlockhash()\n  ).blockhash;\n  return transaction;\n};\nconst createTransferTransaction = async (price) =>\n  createTransaction([\n    SystemProgram.transfer({\n      fromPubkey: provider.publicKey,\n      toPubkey: EXTERNAL_ADDRESS,\n      lamports: (price * 1000000000),\n    }),\n  ]);\nconst sendTransaction = async (transaction: Transaction, item, updateData, setTransactionPercent, setTransactionError, method) => {\n  if (transaction) {\n    try {\n        setTransactionPercent(50);\n        let { signature } = await provider.signAndSendTransaction(transaction);\n        console.log(\n          \"Submitted transaction \" + signature + \", awaiting confirmation\"\n        );\n        setTransactionPercent(75);\n        await CONNECTION.confirmTransaction(signature);\n        if(method === \"add\") {\n          item.wallet = provider.publicKey?.toBase58();\n        } else if(method === \"update\") {\n          item.state = 'starting';\n          item.user2.wallet = provider.publicKey?.toBase58();\n        }\n        await updateData(item);\n        console.log(\"Transaction \" + signature + \" confirmed\");\n        setTransactionPercent(100);\n    } catch (err) {\n      console.warn(err);\n      console.log(\"Error: \" + JSON.stringify(err));\n      setTransactionError(true);\n    }\n  } else {\n    setTransactionError(true);\n  }\n};\nconst sendTransferInstruction = async (item, updateData, setTransactionPercent, setTransactionError, method) => {\n    if(provider == undefined) {\n      provider = getProvider();\n      const transaction = await createTransferTransaction(item.price);\n      setTransactionPercent(25);\n      sendTransaction(transaction, item, updateData, setTransactionPercent, setTransactionError, method);\n    } else {\n      const transaction = await createTransferTransaction(item.price);\n      setTransactionPercent(25);\n      sendTransaction(transaction, item, updateData, setTransactionPercent, setTransactionError, method);\n    }\n};\n\n\nexport default sendTransferInstruction\n","import React, {useState, componentDidMount} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { List, message, Avatar, Skeleton, Divider, Button, Input } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport SolanaLogo from './solanaLogo.png'\n\nfunction Chat(props) {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n    \n\n    React.useEffect(() => {\n      fetch('https://SolanaCasinoServer.gomez0015.repl.co/messages')\n        .then((res) => res.json())\n        .then((res) => {\n          setMessages(res);\n        })\n    })\n\n  async function addToMessageBoard (event) {\n    try{\n      event.preventDefault()\n    } catch (e) {\n      console.log(e.message)\n    }\n    fetch('https://SolanaCasinoServer.gomez0015.repl.co/messages', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: props.walletName.substring(0, 8),\n        message: message,\n      }),\n    })\n      .then((res) => {\n        setMessage('');\n      })\n      .catch((error) => {\n        console.log('Request failure: ', error)\n      })\n  }\n\n  function handleChange (e) {\n    setMessage(e.target.value);\n  }\n  \n\n  return ( \n    <div>\n      <div\n        id=\"scrollableDiv\"\n        style={{\n          overflow: 'auto',\n          padding: '0 16px',\n          border: '1px solid rgba(140, 140, 140, 0.35)',\n          display: 'flex',\n          flexDirection: 'column-reverse',\n        }}\n      >\n        <InfiniteScroll\n          dataLength={messages.length}\n          hasMore={false}\n          scrollableTarget=\"scrollableDiv\"\n          style={{ display: 'flex', flexDirection: 'column-reverse' }}\n        >\n        <List\n          style={{height: '695px', textAlign: 'left', display: 'flex', flexDirection: 'column-reverse'}}\n          itemLayout=\"horizontal\"\n          dataSource={messages}\n          renderItem={item => (\n            <List.Item>\n              <List.Item.Meta\n                avatar={<Avatar src={SolanaLogo} />}\n                title={item.name}\n                description={item.message}\n              />\n            </List.Item>\n          )}\n        />\n        </InfiniteScroll>\n      </div>\n      <div>\n        <form onSubmit={addToMessageBoard} id='chatForm'>\n          <Input\n            className=\"MessageinputForm\"\n            type=\"text\"\n            name=\"message\"\n            value={message}\n            onChange={handleChange}\n            placeholder=\"Message: \"\n          />\n          <div className=\"Submit\">\n            <Button className=\"guestbook-message\" onClick={() => {addToMessageBoard();}}>\n              Send Message\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;","import React, {useRef, useState } from 'react';\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nimport { Empty, Button, Skeleton, Col, Row, Popover, List, Avatar, Divider, Modal, Alert } from 'antd';\nimport Icon, {\n  StockOutlined,\n  UserOutlined,\n  RobotOutlined,\n  ReloadOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\nimport SolanaLogo from './solanaLogo.png'\nimport SolanaLogoInvert from './solanaLogoInvert.png'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Coinflip from './Coinflip.js'\nimport CreateCoinflip from './CreateCoinflip.js'\nimport sendTransferInstruction from './Phantom/SendTransaction.tsx'\nimport Chat from './Chat.js'\n\nfunction CoinflipMenu(props) {\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [createVisibile, setCreateVisibile] = useState(false);\n    const [needsUpdate, setNeedsUpdate] = useState(false);\n    const [transactionPercent, setTransactionPercent] = useState(0);\n    const [transactionError, setTransactionError] = useState(false);\n\n    const loadNewData = () => {\n        if (loading) {\n          return;\n        }\n        setLoading(true);\n        fetch('https://SolanaCasinoServer.gomez0015.repl.co/getCoinflips')\n        .then(res => res.json())\n        .then(body => {\n          body.sort((a, b) => (parseFloat(a.price) > parseFloat(b.price)) ? 1 : -1);\n          body.sort((a, b) => (a.state != 'finished' && b.state == 'finished') ? 1 : -1);\n          for (let i = 0; i < data.length; i++) {\n            if(i > (body.length - 1)) {\n              i = data.length;\n              return;\n            }\n            if(data.length != 0) {\n              if(data[i].visible == true) {\n                body[i].visible = true;\n              } else {\n                body[i].visible = false;\n              }\n            } else {\n              body[i].visible = false;\n            }\n          }\n\n          setData([...body]);\n          setTimeout(() => {setLoading(false);}, 1000);\n        })\n        .catch((e) => {\n            console.log(e);\n            setTimeout(() => {setLoading(false);}, 1000);\n        });\n    };\n\n    React.useEffect(() => {\n      loadNewData();\n    }, [])\n\n    React.useEffect(() => {\n      if(needsUpdate) {\n        var handle=setInterval(needsUpdate ? loadNewData : null,5000);    \n        return ()=>{\n          clearInterval(handle);\n        }\n      }\n    });\n\n    const updateData = (item) => { \n      axios.post('https://SolanaCasinoServer.gomez0015.repl.co/getCoinflipResults', {coinflipData: item})\n      .then(function (response) {\n        loadNewData();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n\n    const endCoinflip = (item) => { \n      axios.post('https://SolanaCasinoServer.gomez0015.repl.co/endCoinflip', {coinflipData: item})\n      .then(function (response) {\n        loadNewData();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const createCoinflip = (item) => {\n      axios.post('https://SolanaCasinoServer.gomez0015.repl.co/addCoinflip', {name: item.name, price: item.price, coin: item.coin, wallet: item.wallet})\n      .then(function (response) {\n        setCreateVisibile(false);\n        loadNewData();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const childCompRef = useRef();\n\n    let EmptyList = {\n      emptyText: (\n        <Empty description=\"No Coinflips :(\" image={Empty.PRESENTED_IMAGE_SIMPLE} />\n      )\n    };\n\n    return (\n    <div>\n    <div style={{textAlign: 'right',}}>\n      {loading ? \n      <LoadingOutlined style={{fontSize: '26px', cursor: 'pointer', position: 'absolute', top: '110px', right: '21vw'}}/> \n      : \n      <ReloadOutlined style={{fontSize: '26px', cursor: 'pointer', position: 'absolute', top: '110px', right: '21vw'}} onClick={() => {loadNewData();}}/>}\n    </div>\n    <Button\n    style={{\n      marginBottom: '25px', marginTop: '-25px',\n    }}\n    onClick={() => {setCreateVisibile(true); \n    if(transactionError == true || transactionPercent == 100) {\n      setTransactionPercent(0); \n      setTransactionError(false);\n    }}}\n    >Create Coinflip</Button>\n    <CreateCoinflip transactionPercentage={transactionPercent} transactionError={transactionError} visible={createVisibile} onCancel={() => {setCreateVisibile(false)}} onCreateFlip={(item) => {sendTransferInstruction(item, createCoinflip, setTransactionPercent, setTransactionError, 'add')}}/>\n    <div\n      id=\"scrollableDiv\"\n      style={{\n        height: 750,\n        textAlign: 'left',\n        overflow: 'auto',\n        padding: '0 16px',\n        border: '1px solid rgba(140, 140, 140, 0.35)',\n        marginRight: '300px',\n      }}\n    >\n      <InfiniteScroll\n        dataLength={data.length}\n        hasMore={false}\n        endMessage={<Divider plain>Thats all, folks!</Divider>}\n        scrollableTarget=\"scrollableDiv\"\n      >\n        <List\n          locale={EmptyList}\n          dataSource={data}\n          renderItem={item => (\n            <List.Item key={item.id}>\n              <List.Item.Meta\n                key={item.id}\n                avatar={<Avatar src={item.user1.coin == '1' ? SolanaLogo : SolanaLogoInvert} />}\n                title={<a href=\"#\">{item.user1.name + ' - ' + item.price + 'sol'}</a>}\n                description={item.user1.wallet}\n              />\n              <div>\n              {item.result == 'none' ||  item.state != 'finished' ? null :  item.result == 'heads' ? <img src={SolanaLogo} style={{width: '25px', marginRight: '5px'}} /> : <img src={SolanaLogoInvert} style={{width: '25px', marginRight: '5px'}} />}\n              <Button \n              onClick={() => {\n                if(transactionError == true || transactionPercent == 100) {\n                  setTransactionPercent(0); \n                  setTransactionError(false);\n                }\n                item.visible = true;\n                setData([...data])\n                setNeedsUpdate(true);\n              }\n              }\n              >{item.state != 'open' || item.user1.wallet === props.userData.wallet ? 'Watch' : 'Join'}</Button>\n              <Coinflip userWallet={props.userData.wallet} transactionPercentage={transactionPercent} transactionError={transactionError} coinflipFinish={() => {setTimeout(() => {setNeedsUpdate(true); endCoinflip(item);}, 2000);}} coin={item.user1.coin} state={item.state} visible={item.visible} price={item.price} wallet1={item.user1.wallet} wallet2={item.user2.wallet} onCancel={() => {item.visible = false; setNeedsUpdate(false); setData([...data]);}} onJoin={() => {setNeedsUpdate(false); sendTransferInstruction(item, updateData, setTransactionPercent, setTransactionError, 'update')}} result={item.result}/>\n              </div>\n            </List.Item>\n          )}\n        />\n      </InfiniteScroll>\n    </div>\n    <div className=\"chat\">\n      <Chat walletName={props.userData.name === 'none' ? 'Guest' : props.userData.name}/>\n    </div>\n    </div>\n    );\n}\n\nexport default CoinflipMenu;","export default __webpack_public_path__ + \"static/media/black1.c1e4b578.png\";","export default __webpack_public_path__ + \"static/media/black2.296188c1.png\";","export default __webpack_public_path__ + \"static/media/black3.d5ea4230.png\";","export default __webpack_public_path__ + \"static/media/black4.87b4efdb.png\";","export default __webpack_public_path__ + \"static/media/black5.2ec567de.png\";","import React from \"react\";\nimport './css/DiceRoll.css';\nimport DiceBlack1 from \"./img/black1.png\";\nimport DiceBlack2 from \"./img/black2.png\";\nimport DiceBlack3 from \"./img/black3.png\";\nimport DiceBlack4 from \"./img/black4.png\";\nimport DiceBlack5 from \"./img/black5.png\";\n\nconst DiceRoll = (props) => {\n\n    const setDice = () => {\n        var elDiceOne = document.getElementById('dice1');\n        var elDiceTwo = document.getElementById('dice2');\n        var elComeOut = document.getElementById('roll');\n\n        var diceOne = props.rolluser1;\n        var diceTwo = props.rolluser2;\n        \n        console.log(diceOne + ' ' + diceTwo);\n\n        for (var i = 1; i <= 6; i++) {\n            elDiceOne.classList.remove('show-' + i);\n            elDiceTwo.classList.remove('show-' + i);\n        }\n\n        elDiceOne.classList.add('show-' + diceOne);\n\n        elDiceTwo.classList.add('show-' + diceTwo);\n    }\n\n    const rollDice = () => {\n        var elDiceOne = document.getElementById('dice1');\n        var elDiceTwo = document.getElementById('dice2');\n        var elComeOut = document.getElementById('roll');\n\n        var diceOne = props.rolluser1;\n        var diceTwo = props.rolluser2;\n        \n        console.log(diceOne + ' ' + diceTwo);\n\n        for (var i = 1; i <= 6; i++) {\n            elDiceOne.classList.remove('show-' + i);\n            if (diceOne === i) {\n            elDiceOne.classList.add('show-' + i);\n            }\n        }\n\n        for (var k = 1; k <= 6; k++) {\n            elDiceTwo.classList.remove('show-' + k);\n            if (diceTwo === k) {\n            elDiceTwo.classList.add('show-' + k);\n            }\n        } \n    }   \n\n    return (\n        <>\n         <div class=\"game\">\n    <div class=\"container\">\n      <div id='dice1' class=\"dice dice-one\">\n        <div id=\"dice-one-side-one\" class='side one'>\n          <img class=\"diceImg\" src={DiceBlack1}></img>\n        </div>\n        <div id=\"dice-one-side-two\" class='side two'>\n          <img class=\"diceImg\" src={DiceBlack2}></img>\n        </div>\n        <div id=\"dice-one-side-three\" class='side three'>\n          <img class=\"diceImg\" src={DiceBlack3}></img>\n        </div>\n        <div id=\"dice-one-side-four\" class='side four'>\n          <img class=\"diceImg\" src={DiceBlack4}></img>\n        </div>\n        <div id=\"dice-one-side-five\" class='side five'>\n          <img class=\"diceImg\" src={DiceBlack5}></img>\n        </div>\n        <div id=\"dice-one-side-six\" class='side six'>\n          <img class=\"diceImg\" src={DiceBlack5}></img>\n        </div>\n      </div>\n   </div>\n    <div class=\"container\">\n      <div id='dice2' class=\"dice dice-two\">\n        <div id=\"dice-two-side-one\" class='side one'>\n            <img class=\"diceImg\" src={DiceBlack1}></img>\n        </div>\n        <div id=\"dice-two-side-two\" class='side two'>\n            <img class=\"diceImg\" src={DiceBlack2}></img>\n        </div>\n        <div id=\"dice-two-side-three\" class='side three'>\n            <img class=\"diceImg\" src={DiceBlack3}></img>\n        </div>\n        <div id=\"dice-two-side-four\" class='side four'>\n            <img class=\"diceImg\" src={DiceBlack4}></img>\n        </div>\n        <div id=\"dice-two-side-five\" class='side five'>\n            <img class=\"diceImg\" src={DiceBlack5}></img>\n        </div>\n        <div id=\"dice-two-side-six\" class='side six'>\n        <img class=\"diceImg\" src={DiceBlack5}></img>\n        </div>\n      </div> \n   </div>\n  </div>\n  {props.state === 'started' ? setTimeout(() => {rollDice();}, 5000) : props.state === 'finished' ? setDice() : null}\n        </>\n    );\n}\n\nexport default DiceRoll;\n","import React from \"react\";\nimport Countdown from 'react-countdown';\nimport { Button, Skeleton, Col, Row, Popover, List, Avatar, Divider, Modal, Progress} from 'antd';\nimport DiceRoll from './DiceRoll'\n\nconst Dice = (props) => {\n\n    const splitText = (text) => {\n        let container = [];\n        for (var x = 0; x < text.length; x++)\n        {\n            container.push(<div className=\"loading__letter\" style={{animationDelay: ((0.1 * (x + 1)) + 's')}}>{text.charAt(x)}</div>);\n        } \n        return container;\n    }   \n\n    return (\n        <>\n            {props.userWallet == props.wallet1 && props.state == \"open\" ?\n            <>\n            <Modal\n                title={\"Dice \" + props.price + \" SOL\"}\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer={[\n                    <Button key=\"back\" onClick={props.onCancel}>\n                    Back\n                    </Button>,\n                ]}\n            >\n            <div className=\"coinflip-div\">\n                <div className=\"loading-container\">\n                    <div className=\"loading\">\n                        {splitText('Waiting...')}\n                    </div>\n                </div>\n            </div>\n            </Modal>\n            </>\n            : props.state === 'starting' ? <>\n            <Modal\n                title={\"Dice \" + props.price + \" SOL\"}\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer={[\n                    <Button key=\"back\" onClick={props.onCancel}>\n                    Back\n                    </Button>,\n                ]}\n            >\n            <div className=\"coinflip-div\">\n                <div id=\"dice\" className={props.rolluser1}>\n                    <DiceRoll state={props.state} rolluser1={props.rolluser1} rolluser2={props.rolluser2} />\n                </div>\n                <div className=\"loading-container\" style={{marginTop: '30px'}}>\n                    <div className=\"loading\">\n                        {splitText('Starting...')}\n                    </div>\n                </div>\n                <p>{props.wallet1} <br/> vs <br/> {props.wallet2}</p>\n            </div>\n            </Modal>\n            </> : props.state === 'started' ? <>\n            <Modal\n                title={\"Dice \" + props.price + \" SOL\"}\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer={[\n                    <Button key=\"back\" onClick={props.onCancel}>\n                    Back\n                    </Button>,\n                ]}\n            >\n            <div className=\"coinflip-div\">\n                <div id=\"dice\" className={props.rolluser1}>\n                    <DiceRoll state={props.state} rolluser1={props.rolluser1} rolluser2={props.rolluser2} />\n                </div>\n                <p className=\"countdownTimer\" id=\"countdown\"> <Countdown \n                date={Date.now() + 5000}\n                intervalDelay={1000}\n                precision={0}\n                onComplete={props.diceFinish}\n                renderer={data => <div>{data.seconds}</div>} \n                /> </p>\n                <p>{props.wallet1} <br/> vs <br/> {props.wallet2}</p>\n            </div>\n            </Modal>\n            </> : props.state === 'open' ? <>\n            <Modal\n                title={\"Dice \" + props.price + ' SOL'}\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer=\n                {props.transactionPercentage != 0 ? \n                <Button key=\"close\" onClick={props.onCancel}>\n                Close\n                </Button> \n                :\n                <>\n                    <Button key=\"close\" onClick={props.onCancel}>\n                        Cancel\n                    </Button>\n                    <Button key=\"close\" onClick={props.onJoin}>\n                        Join\n                    </Button> \n                </> }\n            >\n                <div className=\"coinflip-div\">\n                    <div id=\"dice\" className={props.rolluser1}>\n                        <DiceRoll state={props.state} rolluser1={props.rolluser1} rolluser2={props.rolluser2} />\n                    </div>\n                    <p className=\"countdownTimer\"> Not Started </p>\n                    <p> Join Against {props.wallet1} <br/> for {props.price} SOL</p>\n                </div>\n                <Progress percent={props.transactionPercentage} status={props.transactionError ? 'exception' : 'none'} size=\"small\"  />\n                {props.transactionPercentage == 75 && !props.transactionError ?                 \n                <div className=\"loading-container\">\n                    <div className=\"loading\">\n                        {splitText('Confirming Transaction...')}\n                    </div>\n                </div> : props.transactionPercentage == 25 && !props.transactionError ||  props.transactionPercentage == 50 && !props.transactionError ?\n                <div className=\"loading-container\">\n                    <div className=\"loading\">\n                        {splitText('Joining...')}\n                    </div>\n                </div> : null\n                }\n            </Modal>\n            </> : <>\n            <Modal\n                title={\"Dice \" + props.price + ' SOL'}\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer={[\n                    <Button key=\"back\" onClick={props.onCancel}>\n                    Back\n                    </Button>,\n                ]}\n            >\n                <div className=\"coinflip-div\">\n                    <div id=\"dice\" className={props.rolluser1 + '2'}>\n                    <DiceRoll state={props.state} rolluser1={props.rolluser1} rolluser2={props.rolluser2} />\n                </div>\n                    <p className=\"countdownTimer\">Finished </p>\n                   <p>Winner: <br /> {props.rolluser1 > props.rolluser2 ? props.wallet1 : props.wallet2}</p>\n                </div>\n                \n            </Modal>\n            </>\n            }\n        </>\n    );\n}\n\nexport default Dice;\n","import React, {useState} from \"react\";\nimport SolanaLogo from '../solanaLogo.png'\nimport { Button, Skeleton, Col, Row, Popover, List, Avatar, Divider, Modal, Radio, InputNumber, Input, Progress } from 'antd';\n\n\nconst CreateCoinflip = (props) => {\n    const [price, setPrice] = useState(1);\n    const [name, setName] = useState('Hello World!');\n\n    const handlePriceChange = (e) => {\n        setPrice(e);\n    };\n\n    const handleNameChange = (e) => {\n        setName(e.target.value);\n    };\n\n    const splitText = (text) => {\n        let container = [];\n        for (var x = 0; x < text.length; x++)\n        {\n            container.push(<div className=\"loading__letter\" style={{animationDelay: ((0.1 * (x + 1)) + 's')}}>{text.charAt(x)}</div>);\n        } \n        return container;\n    }   \n\n    return (\n        <>\n            <Modal \n                title=\"Dice Creation\"\n                visible={props.visible}\n                onCancel={props.onCancel}\n                footer=\n                    {props.transactionPercentage != 0 ? \n                    <Button key=\"close\" onClick={props.onCancel}>\n                    Close\n                    </Button> \n                    :\n                    <>\n                        <Button key=\"close\" onClick={props.onCancel}>\n                        Cancel\n                        </Button>\n                        <Button key=\"close\" onClick={() => {props.onCreateDice(\n                            {\n                                price: price,\n                                name: name,\n                                wallet: null,\n                            }\n                        )}}>\n                            Create Dice\n                        </Button> \n                    </> }\n            >\n                <div class=\"coinflip-div\">\n                        <p style={{marginTop: '0'}}>Amount to Wager:</p>\n                        <InputNumber\n                            onChange={handlePriceChange}\n                            defaultValue={price}\n                            min=\"0.05\"\n                            step=\"0.05\"\n                            stringMode\n                        />\n                        <p style={{marginTop: '10px'}}>Dice Name:</p>\n                        <Input\n                            maxLength={12}\n                            style={{width: '125px'}}\n                            onChange={handleNameChange}\n                            value={name}\n                        />\n                        <Progress percent={props.transactionPercentage} status={props.transactionError ? 'exception' : 'none'} size=\"small\"  />\n                        {props.transactionPercentage == 75 && !props.transactionError ?                 \n                        <div className=\"loading-container\">\n                            <div className=\"loading\">\n                                {splitText('Confirming Transaction...')}\n                            </div>\n                        </div> : props.transactionPercentage == 25 && !props.transactionError ||  props.transactionPercentage == 50 && !props.transactionError ?\n                        <div className=\"loading-container\">\n                            <div className=\"loading\">\n                                {splitText('Creating Dice...')}\n                            </div>\n                        </div> : null\n                        }\n                </div>\n            </Modal>\n        </>\n    );\n}\n\nexport default CreateCoinflip;\n","import React, {useRef, useState } from 'react';\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nimport { Empty, Button, Skeleton, Col, Row, Popover, List, Avatar, Divider, Modal, Alert } from 'antd';\nimport Icon, {\n  StockOutlined,\n  UserOutlined,\n  RobotOutlined,\n  ReloadOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\nimport SolanaLogo from '../solanaLogo.png'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Dice from './Dice.js'\nimport CreateDice from './CreateDice.js'\nimport sendTransferInstruction from '../Phantom/SendTransaction.tsx'\nimport Chat from '../Chat.js'\n\nfunction DiceMenu(props) {\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [createVisibile, setCreateVisibile] = useState(false);\n    const [needsUpdate, setNeedsUpdate] = useState(false);\n    const [transactionPercent, setTransactionPercent] = useState(0);\n    const [transactionError, setTransactionError] = useState(false);\n\n    const loadNewData = () => {\n        if (loading) {\n          return;\n        }\n        setLoading(true);\n        fetch('https://SolanaCasinoServer.gomez0015.repl.co/getDice')\n        .then(res => res.json())\n        .then(body => {\n          body.sort((a, b) => (parseFloat(a.price) > parseFloat(b.price)) ? 1 : -1);\n          body.sort((a, b) => (a.state != 'finished' && b.state == 'finished') ? 1 : -1);\n          for (let i = 0; i < data.length; i++) {\n            if(i > (body.length - 1)) {\n              i = data.length;\n              return;\n            }\n            if(data.length != 0) {\n              if(data[i].visible == true) {\n                body[i].visible = true;\n              } else {\n                body[i].visible = false;\n              }\n            } else {\n              body[i].visible = false;\n            }\n          }\n\n          setData([...body]);\n          setTimeout(() => {setLoading(false);}, 1000);\n        })\n        .catch((e) => {\n            console.log(e);\n            setTimeout(() => {setLoading(false);}, 1000);\n        });\n    };\n\n    React.useEffect(() => {\n      loadNewData();\n    }, [])\n\n    React.useEffect(() => {\n      if(needsUpdate) {\n        var handle=setInterval(needsUpdate ? loadNewData : null,5000);    \n        return ()=>{\n          clearInterval(handle);\n        }\n      }\n    });\n\n    const updateData = (item) => { \n      axios.post('https://SolanaCasinoServer.gomez0015.repl.co/getDiceResults', {diceData: item})\n      .then(function (response) {\n        loadNewData();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n\n    const endDice = (item) => { \n      axios.post('https://SolanaCasinoServer.gomez0015.repl.co/endDice', {diceData: item})\n      .then(function (response) {\n        loadNewData();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const createDice = (item) => {\n      axios.post('https://SolanaCasinoServer.gomez0015.repl.co/addDice', {name: item.name, price: item.price, wallet: item.wallet})\n      .then(function (response) {\n        setCreateVisibile(false);\n        loadNewData();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const childCompRef = useRef();\n\n    let EmptyList = {\n      emptyText: (\n        <Empty description=\"No Dice Games :(\" image={Empty.PRESENTED_IMAGE_SIMPLE} />\n      )\n    };\n\n    return (\n    <div>\n    <div style={{textAlign: 'right',}}>\n      {loading ? \n      <LoadingOutlined style={{fontSize: '26px', cursor: 'pointer', position: 'absolute', top: '110px', right: '21vw'}}/> \n      : \n      <ReloadOutlined style={{fontSize: '26px', cursor: 'pointer', position: 'absolute', top: '110px', right: '21vw'}} onClick={() => {loadNewData();}}/>}\n    </div>\n    <Button\n    style={{\n      marginBottom: '25px', marginTop: '-25px',\n    }}\n    onClick={() => {setCreateVisibile(true); \n    if(transactionError == true || transactionPercent == 100) {\n      setTransactionPercent(0); \n      setTransactionError(false);\n    }}}\n    >Create Dice</Button>\n    <CreateDice transactionPercentage={transactionPercent} transactionError={transactionError} visible={createVisibile} onCancel={() => {setCreateVisibile(false)}} onCreateDice={(item) => {sendTransferInstruction(item, createDice, setTransactionPercent, setTransactionError, 'add')}}/>\n    <div\n      id=\"scrollableDiv\"\n      style={{\n        height: 750,\n        textAlign: 'left',\n        overflow: 'auto',\n        padding: '0 16px',\n        border: '1px solid rgba(140, 140, 140, 0.35)',\n        marginRight: '300px',\n      }}\n    >\n      <InfiniteScroll\n        dataLength={data.length}\n        hasMore={false}\n        endMessage={<Divider plain>Thats all, folks!</Divider>}\n        scrollableTarget=\"scrollableDiv\"\n      >\n        <List\n          locale={EmptyList}\n          dataSource={data}\n          renderItem={item => (\n            <List.Item key={item.id}>\n              <List.Item.Meta\n                key={item.id}\n                avatar={<Avatar src={SolanaLogo} />}\n                title={<a href=\"#\">{item.user1.name + ' - ' + item.price + 'sol'}</a>}\n                description={item.user1.wallet}\n              />\n              <div>\n              <Button \n              onClick={() => {\n                if(transactionError == true || transactionPercent == 100) {\n                  setTransactionPercent(0); \n                  setTransactionError(false);\n                }\n                item.visible = true;\n                setData([...data])\n                setNeedsUpdate(true);\n              }\n              }\n              >{item.state != 'open' || item.user1.wallet === props.userData.wallet ? 'Watch' : 'Join'}</Button>\n              <Dice userWallet={props.userData.wallet} transactionPercentage={transactionPercent} transactionError={transactionError} diceFinish={() => {setTimeout(() => {setNeedsUpdate(true); endDice(item);}, 2000);}} state={item.state} visible={item.visible} price={item.price} wallet1={item.user1.wallet} wallet2={item.user2.wallet} onCancel={() => {item.visible = false; setNeedsUpdate(false); setData([...data]);}} onJoin={() => {setNeedsUpdate(false); sendTransferInstruction(item, updateData, setTransactionPercent, setTransactionError, 'update')}} rolluser1={item.rolluser1} rolluser2={item.rolluser2}/>\n              </div>\n            </List.Item>\n          )}\n        />\n      </InfiniteScroll>\n    </div>\n    <div className=\"chat\">\n      <Chat walletName={props.userData.name === 'none' ? 'Guest' : props.userData.name}/>\n    </div>\n    </div>\n    );\n}\n\nexport default DiceMenu;","export default __webpack_public_path__ + \"static/media/casinoLogo.0c6cda38.png\";","import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { Button, Popover, Input, Form, Card, Row, Col, Carousel, Rate, Statistic } from 'antd';\nimport {\n  StockOutlined,\n  UserOutlined,\n  RobotOutlined\n} from '@ant-design/icons';\nimport { Line } from '@ant-design/charts';\nimport Logo from './casinoLogo.png'\n\nconst { Meta } = Card;\n\nfunction Home() {\n  const [totalCoinflips, setTotalCoinflips] = useState(0);\n  const [totalDice, setTotalDice] = useState('0 SOL');\n  const [totalGambled, setTotalGambled] = useState('0 SOL');\n\n\n  const loadNewData = () => {\n    axios.get('https://SolanaCasinoServer.gomez0015.repl.co/getData')\n    .then(res => {\n      setTotalCoinflips(res.data[0].count);\n      setTotalDice(res.data[2].count);\n      setTotalGambled(res.data[1].count + ' SOL');\n    }).catch(err => {\n      console.error(err);\n    })\n  };\n\n  React.useEffect(() => {\n    loadNewData();\n  }, []);\n\n\n  React.useEffect(() => {\n    var handle=setInterval(loadNewData, 30000);    \n\n    return ()=>{\n        clearInterval(handle);\n    }\n  });\n\n  const contentStyle = {\n    height: '500px',\n    marginTop: '20px',\n    color: '#fff',\n    lineHeight: '160px',\n    background: '#001529',\n    padding: '50px',\n    width: '100%',\n  };\n\n  return ( \n    <div style={{textAlign: 'center'}}>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>  \n            <Card title={<div><img style={{width: '150px'}} src={Logo} alt=\"Logo\" /><h2 style={{marginBottom: '0px'}}>Solana Casino</h2><h5>('The Best Solana Casino')</h5></div>}> \n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]} style={{marginTop: \"25px\"}}>\n          <Col span={24}>  <Card> \n            <Statistic title=\"Total Coinflips\" value={totalCoinflips} /> \n            <Statistic title=\"Total Dice Games\" value={totalDice} /> \n            <Statistic title=\"Total Gambled\" value={totalGambled} /> \n          </Card> </Col>\n        </Row>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { Button, Popover, Input, Form, Card, Row, Col, Carousel, Rate, Statistic } from 'antd';\nimport Icon, {\n  StockOutlined,\n  UserOutlined,\n  RobotOutlined,\n  ReloadOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\nimport { Line } from '@ant-design/charts';\nimport Logo from './solanaLogo.png'\n\nconst { Meta } = Card;\n\nfunction Profile(props) {\n    const [loading, setLoading] = useState(false);\n\n    const changeName = () => {\n        if(props.userWallet === 'none' || document.getElementById('name').value === ''){\n            return;\n        }\n        props.userData.name = document.getElementById('name').value;\n        axios.post('https://SolanaCasinoServer.gomez0015.repl.co/user/update', {updatedUser: props.userData})\n        .then(res => {\n            props.setUserData(res.data);\n        }).catch(err => {\n        console.error(err);\n        })\n    };\n\n  return ( \n    <div style={{textAlign: 'center'}}>\n        <div style={{textAlign: 'right',}}>\n            {loading ? \n            <LoadingOutlined style={{fontSize: '26px', cursor: 'pointer', position: 'absolute', top: '80px', right: '5vw'}}/> \n            : \n            <ReloadOutlined style={{fontSize: '26px', cursor: 'pointer', position: 'absolute', top: '80px', right: '5vw'}} onClick={() => {props.loadNewUserData(); setLoading(true);  setTimeout(() => {setLoading(false);}, 1000);}}/>}\n        </div>\n        <Row gutter={[16, 16]} style={{marginTop: \"25px\"}}>\n          <Col span={24}>  <Card>\n            {props.userWallet === 'none' ? \n            <p>Not Logged In.</p>\n            :\n            <>\n                <p>Name: {props.userData.name}</p>\n                <p>Wallet: {props.userData.wallet}</p>\n                <Statistic title=\"Total Coinflips\" value={props.userData.totalCoinflips} /> \n                <Statistic title=\"Total Dice Games\" value={props.userData.totalDice} />\n                <Statistic title=\"Total Gambled\" value={props.userData.totalGambled} />\n                <Input id='name' placeholder='New Name' style={{width: '20%'}}/>\n                <Button onClick={() => {changeName()}} >Set Name</Button>\n            </>\n            }\n          </Card> </Col>\n        </Row>\n    </div>\n  );\n}\n\nexport default Profile;","import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { Button, Popover, Input, Form, Card, Row, Col, Carousel, Rate, Statistic, Modal } from 'antd';\nimport Icon, {\n  StockOutlined,\n  UserOutlined,\n  RobotOutlined,\n  ReloadOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\nimport { Line } from '@ant-design/charts';\nimport Logo from './solanaLogo.png'\n\nconst { Meta } = Card;\n\nfunction ProfilePopup(props) {\n  return ( \n    <div style={{textAlign: 'center'}}>\n        <Modal\n          visible={props.visible}\n          title=\"User Profile\"\n          footer={null}\n          onCancel={props.onCancel}\n        >\n        <Row gutter={[16, 16]} style={{marginTop: \"25px\"}}>\n          <Col span={24}>  <Card>\n            <>\n                <p>Name: {props.userData.name}</p>\n                <p>Wallet: {props.userData.wallet}</p>\n                <Statistic title=\"Total Coinflips\" value={props.userData.totalCoinflips} /> \n                <Statistic title=\"Total Gambled\" value={props.userData.totalGambled} />\n            </>\n          </Card> </Col>\n        </Row>\n        </Modal>\n    </div>\n  );\n}\n\nexport default ProfilePopup;","import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Empty, Button, Skeleton, Col, Row, Popover, List, Avatar, Divider, Modal, Alert, Card, Select } from 'antd';\nimport Icon, {\n  StockOutlined,\n  UserOutlined,\n  RobotOutlined,\n  ReloadOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\nimport SolanaLogo from './solanaLogo.png'\nimport { Line } from '@ant-design/charts';\nimport Logo from './solanaLogo.png';\nimport ProfilePopup from './ProfilePopup';\n\n\nconst { Option } = Select;\nconst { Meta } = Card;\n\nfunction Ranking(props) {\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [list, setList] = useState('1');\n    const [userRanking, setUserRanking] = useState(0);\n    const [profileData, setProfileData] = useState({});\n    const [showProfile, setShowProfile] = useState(false);\n\n    const loadNewData = () => {\n        if (loading) {\n          return;\n        }\n        setLoading(true);\n        fetch('https://SolanaCasinoServer.gomez0015.repl.co/getUsers')\n        .then(res => res.json())\n        .then((body) => {\n            list == '1' ? body.sort((a, b) => (parseFloat(a.totalCoinflips) < parseFloat(b.totalCoinflips)) ? 1 : -1) : list == '2' ? body.sort((a, b) => (parseFloat(a.totalDice) < parseFloat(b.totalDice)) ? 1 : -1) : body.sort((a, b) => (parseFloat(a.totalGambled) < parseFloat(b.totalGambled)) ? 1 : -1);\n            setData([...body]);\n            getRanking([...body], props.userWallet);\n            setTimeout(() => {setLoading(false);}, 1000);\n        })\n        .catch((e) => {\n            console.log(e);\n            setTimeout(() => {setLoading(false);}, 1000);\n        });\n    };\n\n    React.useEffect(async() => {\n        loadNewData();\n    }, [list, props.userWallet]);\n\n    const getRanking = (body, wallet) => {\n        if(wallet == 'none') {\n            setUserRanking(0);\n            return;\n        } else if(list == '1') {\n            var result = body.filter(obj => {\n                return obj.wallet === wallet;\n            })\n            setUserRanking(body.indexOf(result[0]) + 1);\n        } else {\n            var result = body.filter(obj => {\n                return obj.wallet === wallet;\n            })\n            setUserRanking(body.indexOf(result[0]) + 1);\n        }\n    }\n    \n\n    return ( \n        <>\n        <ProfilePopup userData={profileData} visible={showProfile} onCancel={() => {setShowProfile(false)}}/>\n        <Select defaultValue=\"1\" style={{ width: 180 }} onChange={(e) => {setList(e);}}>\n        <Option value=\"1\">Most Coinflips</Option>\n        <Option value=\"2\">Most Dice Games</Option>\n        <Option value=\"3\">Most SOL Gambled</Option>\n        </Select>\n        <p style={{ display: 'inline', marginLeft: '10px'}}>Your Ranking: {userRanking}</p>\n        <div style={{textAlign: 'center'}}>\n            <div\n        id=\"scrollableDiv\"\n        style={{\n            height: 750,\n            textAlign: 'left',\n            overflow: 'auto',\n            padding: '0 16px',\n            border: '1px solid rgba(140, 140, 140, 0.35)',\n        }}\n        >\n        <InfiniteScroll\n            dataLength={data.length}\n            hasMore={false}\n            endMessage={<Divider plain>Thats all, folks!</Divider>}\n            scrollableTarget=\"scrollableDiv\"\n        >\n            <List\n            dataSource={data}\n            renderItem={item => (\n                <List.Item key={item.id}>\n                <List.Item.Meta\n                    key={item.id}\n                    avatar={<Avatar src={item.picture == 'none' ? SolanaLogo : item.picture} />}\n                    title={<a onClick={() => {setProfileData(item); setShowProfile(true);}}>{item.name == 'none' ? item.wallet.substring(0, 8) : item.name}</a>}\n                    description={item.wallet}\n                />\n                {list == '1' ? <p>{item.totalCoinflips} Coinflips</p> : list == '2' ? <p>{item.totalDice} Dice Games</p> : <p>{item.totalGambled} SOL Gambled</p>}\n                </List.Item>\n            )}\n            />\n        </InfiniteScroll>\n        </div>\n        </div>\n        </>\n    );\n}\n\nexport default Ranking;","import { useEffect, useState } from \"react\";\nimport { Button } from 'antd';\nimport Icon from '@ant-design/icons';\n\ntype Event = \"connect\" | \"disconnect\";\n\ninterface Phantom {\n  on: (event: Event, callback: () => void) => void;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n}\n\nconst PhantomSVG = () => (\n  <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"15px\" height=\"15px\" viewBox=\"0 0 768.000000 768.000000\"\n  preserveAspectRatio=\"xMidYMid meet\">\n\n  <g transform=\"translate(0.000000,768.000000) scale(0.100000,-0.100000)\"\n  fill=\"#000000\" stroke=\"none\">\n  <path d=\"M3582 7670 c-1248 -92 -2341 -749 -3003 -1807 -96 -153 -228 -412\n  -297 -583 -460 -1141 -348 -2429 301 -3471 243 -391 584 -762 959 -1043 247\n  -185 607 -387 883 -495 1140 -447 2412 -332 3446 312 391 243 762 584 1043\n  959 238 317 448 720 573 1098 79 240 145 554 175 830 18 174 15 605 -6 780\n  -54 453 -153 811 -331 1200 -259 566 -686 1090 -1193 1468 -550 409 -1193 662\n  -1877 737 -169 19 -518 27 -673 15z m108 -1385 c501 -59 940 -241 1325 -552\n  129 -104 330 -311 426 -438 305 -407 479 -882 506 -1387 l6 -118 347 0 c193 0\n  371 -5 401 -10 116 -22 212 -96 264 -205 41 -84 40 -180 -5 -324 -99 -327\n  -285 -616 -589 -922 -195 -195 -324 -300 -556 -454 -204 -135 -303 -191 -506\n  -289 -435 -210 -882 -339 -1308 -377 -172 -15 -618 -6 -756 15 -478 72 -911\n  257 -1315 559 -157 118 -409 363 -520 507 -233 302 -391 615 -475 945 -80 312\n  -93 627 -39 955 182 1103 1083 1958 2208 2094 151 19 434 19 586 1z\"/>\n  <path d=\"M1987 4599 c-104 -17 -200 -88 -248 -184 -24 -50 -24 -51 -27 -408\n  l-3 -358 27 -60 c34 -76 113 -150 189 -178 165 -62 350 14 426 174 l29 60 0\n  346 c0 278 -3 355 -15 388 -54 154 -213 247 -378 220z\"/>\n  <path d=\"M3172 4599 c-104 -17 -198 -87 -248 -186 l-29 -58 0 -355 0 -355 33\n  -67 c36 -73 86 -123 161 -160 66 -33 215 -33 282 0 74 36 125 87 161 160 l33\n  67 0 355 0 355 -28 56 c-66 136 -214 212 -365 188z\"/>\n  </g>\n  </svg>\n);\n\nconst ConnectToPhantom = (props) => {\n  const [phantom, setPhantom] = useState<Phantom | null>(null);\n  const [phantomError, setPhantomError] = useState(false);\n\n  useEffect(() => {\n    if (\"solana\" in window) {\n      setPhantom(window[\"solana\"]);\n    } else {\n      setTimeout(() => {\n        if (\"solana\" in window) {\n          setPhantom(window[\"solana\"]);\n        } else {\n          setPhantomError(true);\n        }\n      }, 1500);\n    }\n  }, []);\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    phantom?.on(\"connect\", () => {\n      const anyWindow: any = window;\n      const provider = anyWindow.solana;\n      props.setUserWallet(provider.publicKey?.toBase58());\n      setConnected(true);\n    });\n\n    phantom?.on(\"disconnect\", () => {\n      props.setUserWallet('none');\n      setConnected(false);\n    });\n  }, [phantom]);\n\n  const connectHandler = () => {\n    phantom?.connect();\n  };\n\n  const disconnectHandler = () => {\n    phantom?.disconnect();\n  };\n\n  if (phantom) {\n    if (connected) {\n      return (\n        <Button\n          icon={<Icon component={PhantomSVG} />}\n          onClick={disconnectHandler}\n          danger={true}\n        >\n          Disconnect from Phantom\n        </Button>\n      );\n    }\n\n    return (\n      <Button\n        icon={<Icon component={PhantomSVG} />}\n        onClick={connectHandler}\n      >\n        Connect to Phantom\n      </Button>\n    );\n  }\n\n  return (\n    <Button\n        icon={<Icon component={PhantomSVG} />}\n        onClick={() => {window.open('https://phantom.app/', '_blank')}}\n      >\n        {phantomError ? \"Phantom Not Detected!\" : \"Trying to Find Phantom...\"}\n    </Button>\n  );\n};\n\nexport default ConnectToPhantom;\n","export default __webpack_public_path__ + \"static/media/adTest1.216e97df.jpg\";","export default __webpack_public_path__ + \"static/media/adTest2.3d3f8be7.jpg\";","import './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nimport CoinflipMenu from './components/CoinflipMenu'\nimport DiceMenu from './components/Dice//DiceMenu'\nimport Home from './components/Home'\nimport Profile from './components/Profile'\nimport Ranking from './components/Ranking'\nimport Logo from './components/solanaLogo.png'\nimport ConnectToPhantom from \"./components/Phantom/ConnectToPhantom.tsx\";\nimport adTest1 from \"./components/adTest1.jpg\";\nimport adTest2 from \"./components/adTest2.jpg\";\nimport { Layout, Menu, Breadcrumb, Button, Typography, Carousel } from 'antd';\nimport {\n  StockOutlined,\n  UserOutlined,\n  HomeOutlined,\n  ClockCircleOutlined,\n  DollarOutlined,\n  TrophyOutlined\n} from '@ant-design/icons';\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\n\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\nconst { Title } = Typography;\n\nfunction App() {\n  const [collapsed, setCollapsed] = useState(false);\n  const [currentPage, setCurrentPage] = useState(\"Home\");\n  const [userWallet, setUserWallet] = useState('none');\n  const [userData, setUserData] = useState({\n    wallet: 'none',\n    totalCoinflips: 0,\n    totalGambled: 0,\n    name: 'none',\n    picture: 'none'\n  });\n\n  React.useEffect(() => {\n    const parsedData = localStorage.getItem(\"currentPage\") || \"Home\"\n    setCurrentPage(parsedData);\n  }, [])\n\n  const loadNewUserData = () => {\n    if(userWallet === 'none'){\n        return;\n    }\n    axios.post('https://SolanaCasinoServer.gomez0015.repl.co/user', {userWallet: userWallet})\n    .then(res => {\n      setUserData(res.data);\n    }).catch(err => {\n      console.error(err);\n    })\n  };\n\n  React.useEffect(() => {\n    loadNewUserData();\n  }, [userWallet]);\n\n  async function changeCurrentPage(page) {\n    localStorage.setItem(\"currentPage\", page);\n    setCurrentPage(page)\n  }\n\n  return (\n    <>\n    <BrowserView>\n    <Layout>\n      <Header className=\"header\" >\n        <img style={{width: '50px', display: 'inline', position: 'relative', bottom: '0px'}} src={Logo} alt=\"Logo\" />\n        {/* <div className=\"slideshow\" style={{position: 'absolute', width: '800px', height: '50px', display: 'inline', top: '7px', bottom: '0px', left: '300px', overflow: 'hidden'}}>\n          <img style={{position: 'absolute', height: '50px'}} src={adTest1} alt=\"ad\" />\n          <img style={{position: 'absolute', height: '50px', left: '800px'}} src={adTest2} alt=\"ad\" />\n         </div> Ad SlideShow */}\n        <Menu style={{display: 'inline', float: 'right'}}theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n          <ConnectToPhantom setUserWallet={setUserWallet}/>\n        </Menu>\n      </Header>\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sider collapsible collapsed={collapsed} onCollapse={() => { setCollapsed(!collapsed)}}>\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" defaultSelectedKeys={currentPage == \"CoinflipMenu\" ? ['2'] : ['1']} mode=\"inline\">\n            <Menu.Item key=\"1\" style={{ marginTop: '0px'}} icon={<HomeOutlined />} onClick={() => changeCurrentPage(\"Home\")}>\n              Home\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<UserOutlined />} onClick={() => changeCurrentPage(\"Profile\")}>\n              Profile\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<TrophyOutlined />} onClick={() => changeCurrentPage(\"Ranking\")}>\n              Ranking\n            </Menu.Item>\n            <Menu.Item key=\"4\" icon={<DollarOutlined />} onClick={() => changeCurrentPage(\"CoinflipMenu\")}>\n              1v1 Coinflip\n            </Menu.Item>\n            <Menu.Item key=\"5\" icon={<DollarOutlined />} onClick={() => changeCurrentPage(\"DiceMeu\")}>\n              1v1 Dice\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Content style={{ margin: '0 16px' }}>\n            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n              {currentPage == \"CoinflipMenu\" ? <CoinflipMenu userData={userData}/> : currentPage == \"Home\" ? <Home /> : currentPage == \"Profile\" ? <Profile loadNewUserData={() => {loadNewUserData();}} userWallet={userWallet} userData={userData} setUserData={setUserData}/> : currentPage == \"Ranking\" ? <Ranking userWallet={userWallet} /> : <DiceMenu userData={userData} />}\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}><a href=\"https://twitter.com/RaxoCoding\" target=\"_blank\">@RaxoCoding</a></Footer>\n        </Layout>\n      </Layout>\n    </Layout>\n    </BrowserView>\n    <MobileView style={{ textAlign: 'center' }}>\n      <Title>Available for mobile soon...</Title>\n    </MobileView>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}